<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.easyblog.mapper.ArticleMapper">
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache">
        <property name="eviction" value="LRU"/>
        <property name="flushInterval" value="6000000"/>
        <property name="size" value="1024"/>
        <property name="readOnly" value="false"/>
    </cache>

    <insert id="save" useGeneratedKeys="true" keyProperty="articleId" keyColumn="article_id"
            parameterType="top.easyblog.entity.po.Article" flushCache="false">
        INSERT INTO article (article_user, article_topic, article_publish_time,article_click, article_category, article_status,article_top, article_type, article_tags,article_content, article_comment_num, article_appreciate)
        VALUES (#{articleUser}, #{articleTopic}, NOW(), 0, #{articleCategory},#{articleStatus}, #{articleTop}, #{articleType}, #{articleTags},#{articleContent}, 0, #{articleAppreciate})
    </insert>


    <select id="getByPrimaryKey" parameterType="java.lang.Long" useCache="false"
            resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM
            article
        WHERE article_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getAll" resultType="top.easyblog.entity.po.Article">
        SELECT
            article_id,
            article_topic,
            article_publish_time,
            article_content,
            article_click,
            article_category,
            article_comment_num,
            article_first_picture,
            article_user,
            user.user_nickname AS authorName,
            user.user_headerImg_url AS userHeaderImageUrl,
            category_id AS categoryId
        FROM
            article
                LEFT JOIN user ON article.article_user = user.user_id
                LEFT JOIN category ON category.category_user=article_user AND category_name=article_category
        ORDER BY article_publish_time DESC
    </select>

    <select id="countUserArticlesInCategory" resultType="integer">
        SELECT COUNT(*)
        FROM
            article
        WHERE
            article_user = #{userId} AND article_category = #{categoryName}
    </select>

    <select id="getUserArticlesSelective" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM
            article
        WHERE
            article_user = #{userId}
            AND article_type = #{articleType}
            AND article_status = '0'
        ORDER BY
            article_publish_time DESC
    </select>

    <select id="getUserAllArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM
            article
        WHERE
            article_user = #{userId}
            AND article_status = '0'
        ORDER BY
            article_publish_time DESC
    </select>

    <select id="getNewestArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE
            article_user = #{userId}
            AND article_status = '0'
        ORDER BY article_publish_time DESC
        LIMIT #{limit}
    </select>

    <select id="getAllMostFamousArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE
            article_status = '0'
            AND DATE(article_publish_time) >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)
        ORDER BY article_click DESC
        LIMIT #{limit}
    </select>


    <select id="getAllHistoryFamousArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE article_status = '0'
        ORDER BY article_click DESC
        LIMIT #{limit}
    </select>

    <select id="getArticleCategoryCounter" resultType="top.easyblog.entity.po.ArticleCategoryCounter">
        SELECT article_category AS category_name, count(*) AS article_num
        FROM article
        WHERE
            article_status = '0'
            AND DATE(article_publish_time) >= DATE_SUB(CURDATE(), INTERVAL 180 DAY)
        GROUP BY article_category
        LIMIT #{limit}
    </select>

    <select id="getByCategoryWithLimit" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE
            article_status = '0'
            AND DATE(article_publish_time) >= DATE_SUB(CURDATE(), INTERVAL 180 DAY)
            AND (article_category like #{key}
            OR article_topic like #{key})
        ORDER BY article_click DESC
        LIMIT #{limit}
    </select>

    <select id="getAllUserNewestArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE article_status = '0'
          AND DATE(article_publish_time) >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
        ORDER BY article_publish_time DESC
    </select>

    <select id="getAllUserHistoryNewestArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE article_status = '0'
        ORDER BY article_publish_time DESC
        LIMIT #{limit}
    </select>


    <select id="getHotArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE article_user = #{userId}
          AND article_status = '0'
        ORDER BY article_click DESC
        LIMIT #{limit}
    </select>

    <select id="countByUserIdMonthly" resultType="top.easyblog.entity.po.ArticleCounter">
        SELECT
            DATE_FORMAT(article_publish_time, "%Y年%m月") AS date,
            COUNT(*) AS count
        FROM
            article
        WHERE
            article_user = #{userId}
            AND article_status = '0'
        GROUP BY
            DATE_FORMAT(article_publish_time, "%Y年%m月")
        ORDER BY
            DATE_FORMAT(article_publish_time, "%Y年%m月") DESC
    </select>

    <select id="getByUserIdMonthly" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM
            article
        WHERE
            YEAR(article_publish_time) = #{year}
            AND MONTH(article_publish_time) = #{month}
            AND article_user = #{userId}
            AND article_status = '0'
        ORDER BY
            article_publish_time DESC
    </select>

    <select id="getByUserIdMonthlyOrderByClickNum" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM
            article
        WHERE
            YEAR(article_publish_time) = #{year}
            AND MONTH(article_publish_time) = #{month}
            AND article_user = #{userId}
            AND article_status = '0'
        ORDER BY
            article_click DESC
    </select>

    <select id="getByCategoryAndUserId" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM
            article
        WHERE
            article_user = #{userId}
            AND article_status = '0'
            AND article_category IN (
              SELECT
                  category_name
              FROM
                  category
              WHERE
                  category_id = #{categoryId})
        ORDER BY
            article_publish_time DESC
    </select>


    <select id="getArticlesSelective" resultType="top.easyblog.entity.po.Article">
        SELECT * FROM article
        <where>
            <if test="article.articleTopic != null">
                article_topic=#{article.articleTopic} AND
            </if>
            <if test="year!= null">
                YEAR(article_publish_time)=#{year} AND
            </if>
            <if test="month!=null">
                MONTH(article_publish_time)=#{month} AND
            </if>
            <if test="article.articleClick != null">
                article_click=#{article.articleClick} AND
            </if>
            <if test="article.articleCategory != null">
                article_category=#{article.articleCategory} AND
            </if>
            <if test="article.articleStatus != null">
                article_status=#{article.articleStatus} AND
            </if>
            <if test="article.articleTop != null">
                article_top=#{article.articleTop} AND
            </if>
            <if test="article.articleType != null">
                article_type=#{article.articleType} AND
            </if>
            <if test="article.articleTags != null">
                article_tags=#{article.articleTags} AND
            </if>
            <if test="article.articleCommentNum != null">
                article_comment_num=#{article.articleCommentNum} AND
            </if>
            <if test="article.articleAppreciate!=null">
                article_appreciate=#{article.articleAppreciate} AND
            </if>
            <if test="1==1">article_user = #{article.articleUser}</if>
        </where>
    </select>

    <!--根据文章的标题模糊查询-->
    <select id="getUsersArticleByQueryString" resultType="top.easyblog.entity.po.Article">
        SELECT
            article_id,
            article_topic,
            article_publish_time,
            article_content,
            article_click,
            article_category,
            article_comment_num,
            article_first_picture,
            article_user,
            user.user_nickname      AS authorName,
            user.user_headerImg_url AS userHeaderImageUrl
        FROM
            article,
            easyblog.user
        WHERE
            article_topic like #{query}
            AND article_user = user_id
        ORDER BY article_click DESC
    </select>

    <!--按照文章分类名模糊查找某一类的文章，如果需要排序还可以指定参数order=true-->
    <select id="getArticleByCategoryNameFuzzy" parameterType="arraylist" resultType="top.easyblog.entity.po.Article">
        SELECT
          article_id,
          article_user,
          article_topic,
          article_publish_time,
          article_click,
          article_category,
          article_content,
          article_first_picture,
          user.user_headerImg_url AS userHeaderImageUrl
        FROM
        article LEFT JOIN easyblog.user ON article_user=user_id
        WHERE
        <foreach collection="query" item="key" separator=" OR">
            article_category like concat(#{key},'%')
        </foreach>
        <!--是否需要排序。在参数中指定，如果为true表示需要排序，否则不排序-->
        <if test="order==true">
            ORDER BY
              article_click DESC
            <if test="limit>0">
                LIMIT #{limit}
            </if>
        </if>
        <if test="order==false">
            ORDER BY
               article_publish_time DESC
        </if>
    </select>

    <select id="countByUserId" resultType="integer">
        SELECT count(*)
        FROM article
        WHERE article_user = #{userId}
    </select>


    <select id="countSelective" resultType="integer">
        SELECT COUNT(*) FROM article
        <where>
            <if test="article.articleTopic != null">
                article_topic=#{article.articleTopic} AND
            </if>
            <if test="article.articleClick != null">
                article_click=#{article.articleClick} AND
            </if>
            <if test="article.articleCategory != null">
                article_category=#{article.articleCategory} AND
            </if>
            <if test="article.articleStatus != null">
                article_status=#{article.articleStatus} AND
            </if>
            <if test="article.articleTop != null">
                article_top=#{article.articleTop} AND
            </if>
            <if test="article.articleType != null">
                article_type=#{article.articleType} AND
            </if>
            <if test="article.articleTags != null">
                article_tags=#{article.articleTags} AND
            </if>
            <if test="article.articleCommentNum != null">
                article_comment_num=#{article.articleCommentNum} AND
            </if>
            <if test="article.articleAppreciate!=null">
                article_appreciate=#{article.articleAppreciate} AND
            </if>
            <if test="1==1">article_user = #{article.articleUser}</if>
        </where>
    </select>

    <select id="getAllNoneFirstPicArticles" resultType="top.easyblog.entity.po.Article">
        SELECT *
        FROM article
        WHERE article_first_picture is NULL
    </select>



    <insert id="saveSelective" parameterType="top.easyblog.entity.po.Article">
        INSERT INTO article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="articleUser != null">
                article_user,
            </if>
            <if test="articleTopic != null">
                article_topic,
            </if>
            <if test="articlePublishTime != null">
                article_publish_time,
            </if>
            <if test="articleClick != null">
                article_click,
            </if>
            <if test="articleCategory != null">
                article_category,
            </if>
            <if test="articleStatus != null">
                article_status,
            </if>
            <if test="articleTop != null">
                article_top,
            </if>
            <if test="articleType != null">
                article_type,
            </if>
            <if test="articleTags != null">
                article_tags,
            </if>
            <if test="articleContent != null">
                article_content,
            </if>
            <if test="articleCommentNum != null">
                article_comment_num,
            </if>
            <if test="articleAppreciate!=null">
                article_appreciate
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="articleUser != null">
                #{articleUser,jdbcType=INTEGER},
            </if>
            <if test="articleTopic != null">
                #{articleTopic,jdbcType=VARCHAR},
            </if>
            <if test="articlePublishTime != null">
                #{articlePublishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="articleClick != null">
                #{articleClick,jdbcType=INTEGER},
            </if>
            <if test="articleCategory != null">
                #{articleCategory,jdbcType=VARCHAR},
            </if>
            <if test="articleStatus != null">
                #{articleStatus,jdbcType=CHAR},
            </if>
            <if test="articleTop != null">
                #{articleTop,jdbcType=BIT},
            </if>
            <if test="articleType != null">
                #{articleType,jdbcType=CHAR},
            </if>
            <if test="articleTags != null">
                #{articleTags,jdbcType=VARCHAR},
            </if>
            <if test="articleContent != null">
                #{articleContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="articleCommentNum != null">
                #{articleCommentNum,jdbcType=INTEGER},
            </if>
            <if test="articleAppreciate!=null">
                #{articleAppreciate}
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" flushCache="true" parameterType="top.easyblog.entity.po.Article">
        UPDATE article
        <set>
            <if test="articleUser != null">
                article_user = #{articleUser,jdbcType=INTEGER},
            </if>
            <if test="articleTopic != null">
                article_topic = #{articleTopic,jdbcType=VARCHAR},
            </if>
            <if test="articlePublishTime != null">
                article_publish_time = #{articlePublishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="articleClick != null">
                article_click = #{articleClick,jdbcType=INTEGER},
            </if>
            <if test="articleCategory != null">
                article_category = #{articleCategory,jdbcType=VARCHAR},
            </if>
            <if test="articleStatus != null">
                article_status = #{articleStatus,jdbcType=CHAR},
            </if>
            <if test="articleTop != null">
                article_top = #{articleTop,jdbcType=BIT},
            </if>
            <if test="articleType != null">
                article_type = #{articleType,jdbcType=CHAR},
            </if>
            <if test="articleTags != null">
                article_tags = #{articleTags,jdbcType=VARCHAR},
            </if>
            <if test="articleContent != null">
                article_content = #{articleContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="articleCommentNum != null">
                article_comment_num=article_comment_num+#{articleCommentNum,jdbcType=INTEGER},
            </if>
            <if test="articleAppreciate!=null">
                article_appreciate=#{articleAppreciate},
            </if>
            <if test="articleFirstPicture!=null">
                article_first_picture=#{articleFirstPicture,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE article_id = #{articleId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKeyWithContent" parameterType="top.easyblog.entity.po.Article">
        UPDATE article
        SET article_user         = #{articleUser,jdbcType=INTEGER},
            article_topic        = #{articleTopic,jdbcType=VARCHAR},
            article_click        = #{articleClick,jdbcType=INTEGER},
            article_category     = #{articleCategory,jdbcType=VARCHAR},
            article_status       = #{articleStatus,jdbcType=CHAR},
            article_top          = #{articleTop,jdbcType=BIT},
            article_type         = #{articleType,jdbcType=CHAR},
            article_tags         = #{articleTags,jdbcType=VARCHAR},
            article_content      = #{articleContent,jdbcType=LONGVARCHAR},
            article_comment_num  =#{articleCommentNum},
            article_appreciate=#{articleAppreciate},
            article_first_picture=#{articleFirstPicture,jdbcType=VARCHAR}
        WHERE article_id = #{articleId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="top.easyblog.entity.po.Article">
        UPDATE article
        SET article_user         = #{articleUser,jdbcType=INTEGER},
            article_topic        = #{articleTopic,jdbcType=VARCHAR},
            article_publish_time = #{articlePublishTime,jdbcType=TIMESTAMP},
            article_click        = #{articleClick,jdbcType=INTEGER},
            article_category     = #{articleCategory,jdbcType=VARCHAR},
            article_status       = #{articleStatus,jdbcType=CHAR},
            article_top          = #{articleTop,jdbcType=BIT},
            article_type         = #{articleType,jdbcType=CHAR},
            article_tags         = #{articleTags,jdbcType=VARCHAR},
            article_comment_num  =#{articleCommentNum},
            article_appreciate=#{articleAppreciate},
            article_first_picture=#{articleFirstPicture,jdbcType=VARCHAR}
        WHERE article_id = #{articleId,jdbcType=BIGINT}
    </update>

    <update id="updateArticlesByUserIdAndArticleCategory">
        UPDATE
            article
        SET
            article_category=#{newArticleCategory}
        WHERE
            article_category = #{oldArticleCategory}
            AND article_user = #{userId}
    </update>


    <!--根据用户的ID和文章标题删除草稿文章-->
    <delete id="deleteArticleByUserIdAndTitle">
        DELETE
        FROM article
        WHERE
            article_user = #{userId}
            AND article_topic = #{title}
            AND article_status = '2'
    </delete>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE
        FROM article
        WHERE article_id = #{articleId,jdbcType=BIGINT}
    </delete>


</mapper>