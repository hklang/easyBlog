<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.easyblog.mapper.UserMapper">
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache">
        <property name="eviction" value="LRU"/>
        <property name="flushInterval" value="6000000"/>
        <property name="size" value="1024"/>
        <property name="readOnly" value="false"/>
    </cache>
    <!--添加一条记录-->
    <insert id="save" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
        insert into user (user_nickname, user_password, user_name, user_gender, user_birthday, user_phone,
                          user_mail, user_address, user_score, user_rank, user_headerImg_url,
                          user_description, user_register_time, user_register_ip,
                          user_last_update_time, user_lock, user_freeze, user_power, user_level, user_visit, user_hobby,
                          user_tech)
        values (#{userNickname}, #{userPassword}, #{userName},
                #{userGender}, #{userBirthday},
                #{userPhone}, #{userMail}, #{userAddress},
                #{userScore}, #{userRank}, #{userHeaderImgUrl},
                #{userDescription}, now(), #{userRegisterIp},
                #{userLastUpdateTime}, #{userLock},
                #{userFreeze}, #{userPower}, #{userLevel}, #{userVisit}, #{userHobby}, #{userTech})
    </insert>

    <insert id="saveCoreInfo" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id" parameterType="top.easyblog.entity.po.User">
        insert into user(user_nickname,user_password,user_headerImg_url,user_register_time,user_register_ip, user_lock, user_freeze, user_power)
        values(#{userNickname},#{userPassword},#{userHeaderImgUrl},now(),#{userRegisterIp},#{userLock},#{userFreeze},#{userPower})
    </insert>

    <update id="updateByPrimaryKeySelective">
        update user
        <set>
            <if test="user.userNickname!=null">
                user_nickname=#{user.userNickname},
            </if>
            <if test="user.userName!=null">
                user_name=#{user.userName},
            </if>
            <if test="user.userPassword != null">
                user_password=#{user.userPassword},
            </if>
            <if test="user.userGender!=null">
                user_gender=#{user.userGender},
            </if>
            <if test="user.userPhone!=null">
                user_phone=#{user.userPhone},
            </if>
            <if test="user.userMail!=null">
                user_mail=#{user.userMail},
            </if>
            <if test="user.userAddress!=null">
                user_address=#{user.userAddress},
            </if>
            <if test="user.userBirthday!=null">
                user_birthday=#{user.userBirthday},
            </if>
            <if test="user.userScore!=null">
                user_score=#{user.userScore},
            </if>
            <if test="user.userRank!=null">
                user_rank=#{user.userRank},
            </if>
            <if test="user.userHeaderImgUrl!=null">
                user_headerImg_url=#{user.userHeaderImgUrl},
            </if>
            <if test="user.userDescription!=null">
                user_description=#{user.userDescription},
            </if>
            <if test="user.userLastUpdateTime!=null">
                user_last_update_time=#{user.userLastUpdateTime},
            </if>
            <if test="user.userFreeze!=null">
                user_lock=#{user.userLock},
            </if>
            <if test="user.userPower!=null">
                user_power=#{user.userPower},
            </if>
            <if test="user.userLevel != null">
                user_level=#{user.userLevel},
            </if>
            <if test="user.userVisit != null">
                user_visit=#{user.userVisit},
            </if>
            <if test="user.userPrefession!=null">
                user_prefession=#{user.userPrefession},
            </if>
            <if test="user.userJobPosition!=null">
                user_job_position=#{user.userJobPosition},
            </if>
            <if test="user.userHobby!=null">
                user_hobby=#{user.userHobby,jdbcType=VARCHAR},
            </if>
            <if test="user.userTech!=null">
                user_tech=#{user.userTech,jdbcType=VARCHAR}
            </if>
        </set>
        where user_id=#{user.userId}
    </update>

    <!--根据邮件修改用户信息-->
    <update id="updateUserSelective">
        update user
        <set>
            <if test="userNickname!=null">
                user_nickname=#{userNickname},
            </if>
            <if test="userPassword != null">
                user_password=#{userPassword},
            </if>
            <if test="userGender!=null">
                user_gender=#{userGender},
            </if>
            <if test="userAddress">
                user_address=#{userAddress},
            </if>
            <if test="userScore!=null">
                user_score=#{userScore},
            </if>
            <if test="userRank!=null">
                user_rank=#{userRank},
            </if>
            <if test="userHeaderImgUrl!=null">
                user_headerImg_url=#{userHeaderImgUrl},
            </if>
            <if test="userDescription!=null">
                user_description=#{userDescription},
            </if>
            <if test="userLastUpdateTime!=null">
                user_last_update_time=#{userLastUpdateTime},
            </if>
            <if test="userFreeze!=null">
                user_lock=#{userLock},
            </if>
            <if test="userFreeze!=null">
                user_freeze=#{userFreeze},
            </if>
            <if test="userPower!=null">
                user_power=#{userPower},
            </if>
            <if test="userLevel != null">
                user_level=#{userLevel},
            </if>
            <if test="userVisit != null">
                user_visit=#{userVisit},
            </if>
            <if test="userPrefession!=null">
                user_prefession=#{userPrefession},
            </if>
            <if test="userJobPosition!=null">
                user_job_position=#{userJobPosition},
            </if>
            <if test="user.userHobby!=null">
                user_hobby=#{user.userHobby,jdbcType=VARCHAR},
            </if>
            <if test="user.userTech!=null">
                user_tech=#{user.userTech,jdbcType=VARCHAR}
            </if>
        </set>
        where
        <choose>
            <when test="userMail != null and userMail != ''">
                user_mail=#{userMail}
            </when>
            <when test="userPhone != null and userPhone != ''">
                user_phone=#{userPhone}
            </when>
            <when test="1==1">1=1</when>
        </choose>
    </update>

    <select id="getByPrimaryKey" resultType="top.easyblog.entity.po.User">
        select *
        from user
        where user_id = #{id}
    </select>

    <select id="getAll" resultType="top.easyblog.entity.po.User">
        select *
        from user
    </select>

    <!--通过手机号和用户密码查询一个用户-->
    <select id="getUserByUserPhoneAndPassword" resultType="top.easyblog.entity.po.User">
        select *
        from user
        where user_password = #{password}
          AND user_phone = #{userPhone}
    </select>

    <!--通过Email和用户密码查询一个用户-->
    <select id="getUserByUserEmailAndPassword" resultType="top.easyblog.entity.po.User">
        select *
        from user
        where user_password = #{password}
          AND user_mail = #{userEmail}
    </select>

    <select id="getUserByNickname" resultType="top.easyblog.entity.po.User">
        select *
        from user
        where user_nickname = #{nickname}
    </select>

    <select id="getUserByPhone" resultType="top.easyblog.entity.po.User">
        select *
        from user
        where user_phone = #{phone}
    </select>

    <select id="getUserByEmail" resultType="top.easyblog.entity.po.User">
        select *
        from user
        where user_mail = #{email}
    </select>


    <!--根据条件计数-->
    <select id="count" resultType="integer">
        select count(*)
        from user
    </select>

    <!--根据主键删除-->
    <delete id="deleteByPrimaryKey">
        delete
        from user
        where user_id = #{userId}
    </delete>

    <!--有选择性的删除-->
    <delete id="deleteSelective">
        delete from user
        <where>
            <choose>
                <when test="userNickname!=null">user_nickname=#{userNickname}</when>
                <when test="userPhone!=null">user_phone=#{userPhone}</when>
                <when test="1==1">1=1</when>
            </choose>
        </where>
    </delete>


</mapper>